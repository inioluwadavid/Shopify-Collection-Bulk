name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint || echo "Linting not configured yet"

    - name: Check for syntax errors
      run: |
        node --check scripts/bulk-collections.js
        node --check scripts/extract-from-docx.js
        node --check scripts/parse-bulk-log.js

    - name: Test CSV parsing
      run: |
        # Test that CSV files can be parsed
        node -e "
        import { parse } from 'csv-parse/sync';
        import fs from 'fs';
        
        const csvContent = fs.readFileSync('data/collections.sample.csv', 'utf8');
        const records = parse(csvContent, { columns: true, skip_empty_lines: true });
        console.log('CSV parsing test passed:', records.length, 'records found');
        "

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level moderate

  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Verify package.json
      run: |
        # Check that package.json is valid
        node -e "console.log('package.json is valid:', JSON.parse(require('fs').readFileSync('package.json', 'utf8')).name)"

    - name: Test environment setup
      run: |
        # Test that environment variables are properly configured
        cp .env.example .env
        echo "Environment setup test passed"
